import numpy as np

"""
-np.array - слева направо (к доске)
-np.flip - справа налево (от доски)
[...]_reverse – несимметричная фигура, перевёрнутая по вертикальной оси
"""

full_x = np.linspace(-100, 100, 41)
cut_x_60 = np.linspace(-60, 60, 25)
"""ранее называлась cut_x"""
cut_x_25 = np.linspace(-25, 25, 26)
"""ранее называлась cut_x_DOP"""
cut_x_26 = np.linspace(-26,26, 27)
cut_x_50 = np.linspace(-50, 50, 51)

###################################################################################################
"""circle – маленький круг - диаметр 30 см"""

circle_8_2ghz = - np.array(
    [48.4, 49.1, 48.3, 48.4, 48.8, 48.1, 49.1, 48.2, 48.1, 48.6, 49.3, 47.9, 47.6, 48.3, 48.7, 48.8, 50.2, 53.3, 54.2, 53.5, 51.6, 51.2, 52.4, 53.6, 53.2, 50.8, 48.9, 48.8, 49, 48.3, 48.3, 49.2, 49.3, 48.3, 48.4, 49, 48.8, 48.5, 48.7, 48.2, 48.2]
    )
"""Для оси х используется full_x"""
circle_10ghz = - np.array(
    [54.7, 55.3, 55.5, 55.1, 54.5, 54.7, 55.3, 55.7, 55.3, 55.8, 55.7, 55.5, 54.1, 55.0, 55.8, 56, 56.4, 59.5, 62, 59.5, 56.4, 57, 57.7, 61.1, 62.5, 58.7, 56.9, 56, 55.5, 55.2, 55.6, 56.3, 56.3, 55.4, 56.3, 55.7, 55.9, 56.2, 56, 56, 55.4]
    )
"""Для оси х используется full_x"""
circle_11_8ghz = - np.flip(
    [60.6, 61, 60.6, 60.9, 61, 60.8, 60.4, 61.6, 60.4, 61.3, 61, 60.3, 60, 60.8, 61.5, 61.9, 64.5, 70.5, 67, 63.5, 64.2, 69.2, 67.9, 62.1, 60.2, 60.5, 59, 59.1, 60.7, 61.5, 59.9, 61.1, 60.4, 60, 60.5, 60.1, 60.5, 61, 60.7, 60.9, 60.8]
    )
"""Для оси х используется full_x"""
circle_17_8ghz = - np.flip(
    [45.4, 45.8, 46.1, 46.9, 46.3, 45.9, 45.1, 44.9, 45.6, 45.9, 45.7, 45.6, 46.3, 47.3, 48.1, 48.5, 49, 49.4, 50.7, 52.4, 54.6, 55.2, 54.7, 54.4, 54.5, 55.5, 56.8, 56.9, 54.2, 52.4, 50.6, 49.7, 48.9, 48.5, 48.2, 47.2, 46.4, 45.9, 45.5, 45.6, 45.6, 45.5, 44.9, 44.6, 45.4, 46.8, 47, 46.3, 45.7, 45.2, 46.1]
    )
"""Для оси х используется cut_x_50"""
###################################################################################################
"""big_circle – большой круг - диаметр 43 см"""

big_circle_8_2ghz = - np.flip(
    [48.1, 48, 47.9, 48.4, 48.5, 47.8, 48, 47.9, 48.5, 48.3, 47.5, 47, 47.8, 49.4, 50.1, 50.1,51.4,55.5,58.3,55.6,53.2,54.6,60.7,56,51.9,50,50.8,49.5,48,47.1,47.9,48.8,48.8,48,48.2,48,48.7,47.9,48,48.6,47.4]
    )
"""Для оси х используется full_x"""
big_circle_10ghz = - np.array(
    [55.2, 55, 55.4, 55.2, 55.3, 55.4, 55.5, 55.3, 56.4, 54.8, 54.2, 54.3, 55.3, 55.9, 59.1, 59.3, 59.2, 63.2, 62.4, 58.5, 57, 59.5, 64, 61.1, 58.3, 59.1, 57.1, 55.2, 55, 54.4, 55.2, 55.3, 56.2, 54.7, 55.2, 55.1, 55, 55.4, 55, 55, 55.2]
    )
"""Для оси х используется full_x"""
big_circle_11_8ghz = - np.flip(
    [60.5,60.3,60.4,60.4,60.5,60.1,60,60.7,59.7,60.3,60.6,60,59.5,59.6,60.8,60.9,64.2,64.4,67.8,75,65.5,64.3,71.5,69.7,64.7,65.9,61.7,60.5,60.3,58.9,59.8,59.9,61.2,59.9,59.8,61.2,59.9,60.9,59.7,60.5,59.6]
    )
"""Для оси х используется full_x"""
big_circle_17_8ghz = - np.array(
    [47.4, 47.4, 46.6, 46.3, 46.4, 46.3, 45.7, 45.7, 46.2, 46.5, 47, 47.8, 49.2, 50.2, 50, 49.8, 49.9, 50.6, 52.4, 54.1, 54.7, 53.9, 53.8, 54.7, 55.8, 56.9, 56.7, 56.4, 55.6, 55.2, 54.6, 54.1, 54.4, 54.2, 52.2, 50.7, 49.9, 49.5, 49.9, 49.3, 48.2, 47.2, 46.5, 45.8, 45.5, 45.8, 46.4, 46.7, 46.6, 46.9, 47.2]
    )
"""Для оси х используется cut_x_50"""
###################################################################################################
"""max_circle – самый большой круг - диаметр 55 см"""

max_circle_8_2ghz = - np.array(
    [48,47.8,48.3,48.4,46.9,48.2,48.8,47.7,46.9,47.7,47.1,48.2,49.8,50.8,52.6,53.6,52.8,58.4,63.5,55.5,56.3,62.1,56.8,52.4,52.2,52.8,50.9,49.6,48.4,47.5,47.5,47.1,47.7,48.8,48.2,47.3,48.2,48.3,48,47.8,47.8]
    )
"""Для оси х используется full_x"""
max_circle_8_2ghz_dop = - np.array(
    [53.3, 53.4, 53.1, 53.2, 55.2, 57.6, 63.4, 68.8, 63.3, 59.7, 57.7, 56.9, 56.3, 57.6, 60.2, 62.6, 63.7, 59.5, 56.3, 54.2, 53.1, 52.5, 52.5, 52.6, 52.7, 52.5]
    )
"""Для оси х используется cut_x_25"""
max_circle_10ghz = - np.flip(
    [56.1,55.6,56.4,55.5,55.8,56,54.8,56.2,56.7,55.6,54.9,55,56.4,56.6,59.1,60,62.9,60.8,60.2,64.8,59.7,59.8,64.9,64.3,60.4,63.2,60.9,58.4,57.3,55.7,54.8,54.6,54.7,55.7,56.2,55.3,55.7,56.4,56,55.9,55.4]
    )
"""Для оси х используется full_x"""
max_circle_10ghz_dop = - np.flip(
    [58.9, 61.3, 61., 60.1, 59.2, 59.5, 60.3, 60.6, 62.6, 64.2, 63.9, 63.2, 61.3, 60.2, 60.3, 62.5, 66.8, 65.2, 64.8, 63.3, 60.4, 59.5, 59.1, 60.4, 61.9, 62.3]
    )
"""Для оси х используется cut_x_25"""
max_circle_11_8ghz = - np.array(
    [60.3, 60.1, 60.2,59.8,61,60.8,59.9,60.4,61,58.4,58.7,59.4,60.5,60.2,64.7,64.2,71,70.3,73.2,70.2,66.6,70.9,69.1,74.4,68.9,65.6,64.1,61.4,59.9,59.5,59.3,60.9,60.9,59.7,60.2,59.6,60,59.8,60.2,60.1,60.3]
    )
"""Для оси х используется full_x"""
max_circle_11_8ghz_dop = - np.array(
    [63.7, 64.9, 67.3, 69.5, 70.1, 70.9, 67.1, 70.6, 72.7, 73.9, 73.2, 72.3, 68.7, 69.1, 61.7, 72.8, 72.1, 69.8, 67.9, 67.3, 69.8, 69.8, 68, 66.1, 64.2, 64.1]
    )
"""Для оси х используется cut_x_25"""
max_circle_17_8ghz = - np.array(
    [45.9, 45.6, 44.9, 44.7, 44.9, 45.2, 46.2, 47, 47.8, 48.2, 48.6, 50.5, 51.5, 51.4, 52.1, 54.5, 55.3, 54.3, 52.8, 52.6, 54.9, 57.6, 58.2, 56.2, 54.8, 55.9, 55.1, 54.8, 55.2, 56.4, 57.6, 57.7, 55.5, 53.7, 53.1, 54.1, 53.8, 52.1, 51.7, 51.3, 49.9, 48.7, 47.7, 47.1, 46.3, 45.8, 45.3, 44.9, 44.8, 45.3, 45.8]
    )
"""Для оси х используется cut_x_50"""
###################################################################################################
"""Квадрат со стороной 34 см"""

square_8_2_ghz = - np.flip(
    [47.9, 47.9, 47.9, 48.1, 48.3, 48.2, 48, 48, 48.7, 48.3, 47.4, 47.8, 48.2, 48.3, 48.2, 48.7, 50.2, 54.3, 57.6, 55, 53, 53.5, 57, 54.9, 50.8, 49.6, 49.9, 49.6, 47.8, 46.7, 47.5, 48.4, 47.9, 47.9, 48.3, 47.6, 48.2, 48, 47.9, 48.1, 47.9]
    )
"""Для оси х используется full_x"""
square_10_ghz = - np.array(
    [52.5, 52.7, 52.8, 52.5, 52.6, 53.3, 53, 52.8, 53.4, 53.3, 52.8, 53, 52.9, 52.6, 54.5, 56.4, 56.3, 57.3, 68, 59.9, 57, 56.9, 59.9, 61.8, 57.8, 55.8, 54.6, 54.4, 54.4, 53.9, 53.5, 53.8, 54.2, 54.1, 54, 53.9, 54.1, 54.3, 54.1, 54.3, 54.2]
    )
"""Для оси х используется full_x"""
square_11_8ghz = - np.flip(
    [60.6,60.7,60.7,60.8,60.9,60.6,60.7,60.4,60.8,60.8,60.8,60.4,60.2,60.6,61.5,61.8,61.4,62.7,67.9,74.3,66.4,63.7,67.8,74.1,65.5,64.4,63.6,59.2,59,59.2,59.3,60.8,61.3,60.5,60.2,61.5,60.4,61,60.5,60.5,60.8]
    )
"""Для оси х используется full_x"""
square_17_8_ghz = - np.array(
    [46.2, 46.3, 45.8, 45.6, 46, 45.9, 45.4, 45, 45.1, 45.6, 46.4, 47.2, 47.6, 47.9, 48.1, 48.6, 49.4, 51.2, 52.8, 54.2, 54.5, 54, 54.3, 55.5, 57.1, 59, 59.3, 58.3, 56.5, 54.9, 53.8, 53.2, 53.6, 53.1, 51.5, 49.8, 48.9, 48.1, 47.7, 47.6, 47.1, 46.3, 45.8, 45.1, 44.9, 45.4, 45.8, 45.7, 45.6, 45.8, 46.2]
    )
"""Для оси х используется cut_x_50"""
###################################################################################################
"""nonsymmetrical – комбинация круга и овала"""

nonsymmetrical_8_2_ghz = - np.array(
    [48.1, 48.7, 47.7, 48.1, 48.3, 47.8, 49.4, 48.2, 48.9, 47.6, 47.2, 47, 47.8, 49.7, 50.9, 51.7, 53.6, 52.4, 52.1, 56.3, 59.8, 59.2, 62.4, 66.2, 55.2, 51.2, 51.2, 51, 50.3, 49.6, 47.8, 46.6, 48, 48.1, 48.9, 48.2, 48.1, 48.1, 48.2, 47.8, 48.6]
    )
"""Для оси х используется full_x"""
nonsymmetrical_8_2_ghz_reverse = - np.array(
    [52.5, 53.1, 53.8, 54.5, 54.3, 54.5, 54.8, 55.1, 55.6, 56.4, 57.2, 57.1, 56.9, 56.3, 55.9, 55.7, 55.6, 56.2, 57.1, 58.9, 62.1, 67.3, 67.9, 62.5, 61.2, 60.4, 59.9, 60.1, 59.9, 61.2, 61.1, 60.4, 59.4, 58, 56.7, 56.1, 55.8, 55.7, 55.9, 56.5, 56.7, 56.4, 55.9, 56.2, 56.1, 55.9, 56.3, 55.5, 55.1, 54.3, 53.3]
    )
"""Для оси х используется cut_x_50"""
nonsymmetrical_10_ghz = - np.flip(
    [54.5, 55.7, 55.7, 55.6, 55.4, 54.3, 55.8, 55.9, 55, 54.5, 54.3, 56.4, 56.9, 58.2, 58.1, 59.9, 60.1, 61.1, 65.2, 67.3, 63.9, 61.9, 59.2, 59.5, 60.8, 60.6, 59.1, 58.4, 56., 54.6, 53.1, 54.9, 55.6, 55, 54.8, 54.7, 55.9, 55, 55.2, 55.5, 54.9]
    )
"""Для оси х используется full_x"""
nonsymmetrical_10_ghz_reverse = - np.flip(
    [49.1, 48.2, 48.8, 51, 50.4, 49.7, 51.2, 52.3, 51.7, 51.4, 51.1, 51.9, 52.8, 52.9, 52.9, 52.6, 51.9, 52.1, 52.5, 53.7, 55.3, 57.2, 59.1, 60.4, 62.1, 66.3, 68.3, 70.5, 62.5, 57.8, 54.3, 52.5, 52.2, 51.9, 53.2, 54.4, 54.6, 53.6, 52.4, 51.7, 51.4, 51.2, 51.4, 51.5, 51.1, 50.6, 49.6, 49.0, 48.7, 48.6, 48.5]
    )
"""Для оси х используется cut_x_50"""
nonsymmetrical_11_8ghz = - np.array(
    [62, 60.4, 59.8, 58.8, 61.1, 63.7, 64.9, 66.4, 65.3, 69.8, 65.6, 70.3, 75.6, 74.1, 68.5, 65.8, 66.5, 63.9, 63.8, 62.5, 61.5, 59.8, 60.1, 60, 61.1]
    )
"""Для оси х используется cut_x_60"""
nonsymmetrical_11_8ghz_DOP = - np.flip(
    [64.9, 65.9, 66.1, 67.2, 67.3, 67.4, 67.3, 68.3, 70.2, 71.2, 74.2, 72.7, 72.9, 75.4, 72.5, 70.1, 68.5, 67.2, 65.8, 66.5, 69.1, 68.8, 67.3, 65.9, 65.4, 66.1]
    )
"""Для оси х используется cut_x_25"""
nonsymmetrical_11_8ghz_reverse = - np.array(
    [52.4, 52.3, 52.7, 53.4, 54.3, 55.5, 56.6, 57.9, 58.1, 59.4, 59.8, 59.2, 59.1, 59.4, 61.3, 63.5, 63.4, 60.4, 59.8, 58.9, 59.6, 62.9, 69.6, 73, 65.8, 64.4, 63.9, 64.7, 64.3, 63.9, 61.8, 59.2, 58.1, 58.2, 58.9, 60.5, 61.9, 62.1, 60.9, 60, 61.7, 63.1, 61.8, 62.7, 61.2, 60.6, 59.9, 57.6, 54.1, 53.3, 52.9]
    )
"""Для оси х используется cut_x_50"""
###################################################################################################
"""z – два соединённых вместе прямоугольника со сдвигом друг относительно друга"""

z_8_2_ghz = - np.array(
    [52.5, 52.8, 52.6, 52.4, 52.8, 53.2, 54, 54.6, 55.3, 55.6, 55.4, 55.7, 55.6, 55.4, 54.9, 54.8, 54.6, 54.7, 54.6, 54.5, 54.4, 54.5, 54.8, 54.3, 54.2, 54.4, 54.9, 55.1, 55.7, 56.3, 57.7, 60, 62.5, 63, 61.5, 58.9, 56.6, 54.7, 53.3, 52.3, 51.3, 51.0, 50.8, 51.1, 51.4, 51.9, 52.4, 53.1, 53.2, 53.2, 53.5]
    )
"""Для оси х используется cut_x_50"""
z_8_2_ghz_reverse = - np.flip(
    [52.1, 51.9, 52.2, 52.9, 53.5, 54.2, 55.1, 55.8, 55.6, 55.2, 54.8, 54.7, 54.6, 54.4, 54.5, 54.5, 54.3, 54.5, 54.8, 54.4, 53.9, 54.0, 53.9, 54.3, 55.4, 56.1, 56.8, 58.7, 60.6, 62.2, 61.8, 60.4, 58.6, 56.8, 54.9, 53.6, 52.5, 51.8, 51.4, 51.3, 51.4, 51.8, 52.1, 52.6, 53.4, 54.0, 54.4, 54.2, 53.6, 53.4, 53.1]
    )
"""Для оси х используется cut_x_50"""
z_10_ghz = - np.array(
    [48.6, 48.5, 48.6, 48.4, 48.7, 48.6, 48.5, 48.5, 48.8, 49.5, 50, 51.1, 51.8, 52.8, 53.6, 53.7, 53.1, 52.5, 52.1, 52, 51.4, 51, 50.6, 50.2, 50.2, 50, 50.3, 50.9, 51.3, 52.6, 54.8, 59.2, 62.2, 65.9, 59.8, 54.4, 51.5, 50, 48.7, 48.3, 48.4, 48.6, 49.2, 49.6, 49.6, 49.5, 49.6, 49.8, 49.6, 49.5, 49.5]
    )
"""Для оси х используется cut_x_50"""
z_10_ghz_reverse = - np.flip(
    [48.9, 48.7, 48.9, 48.8, 48.6, 48.5, 49.1, 49.8, 50.9, 52.5, 53.6, 54.5, 54.8, 54.5, 54.2, 53, 51.8, 51.2, 50.8, 50.4, 50.1, 49.6, 49.7, 50, 50.5, 51, 51.8, 53.4, 54.8, 58.2, 61.4, 60.2, 56, 52.6, 50.6, 49.2, 48.1, 47.7, 47.8, 48, 48.5, 49.2, 49.5, 49.7, 49.8, 49.9, 50.1, 50.4, 50.3, 50, 49.5]
    )
"""Для оси х используется cut_x_50"""
z_11_8_ghz = - np.array(
    [55.9, 54.9, 53.7, 52.8, 52.7, 53.3, 53.9, 53.9, 54.2, 54.6, 54.9, 55.2, 55.9, 55.9, 54.9, 54.6, 54.2, 54.4, 55.8, 57.8, 61.5, 66.4, 74.0, 67.1, 61.9, 59.9, 56.6, 56.2, 55.2, 54.6, 55.1, 55.8, 55.9, 56.3, 56.5, 57.8, 60.2, 60.8, 61.5, 64.2, 63.9, 61.1, 57.6, 56.7, 56.1, 56.2, 56.4, 55.4, 54.6, 54.8, 53.8]
    )
"""Для оси х используется cut_x_50"""
z_11_8_ghz_reverse = - np.flip(
    [54.7, 54.8, 54.9, 55.7, 56.4, 56.4, 55.9, 55.6, 55.8, 56.2, 56.6, 56.1, 54.8, 54.4, 55.1, 56.8, 59.8, 62.8, 70.5, 73, 65.5, 61.2, 59.2, 58.3, 57.3, 56.2, 55.9, 55.2, 54.9, 55.2, 56.2, 57.4, 58.6, 59.8, 61.2, 62.8, 63.6, 60.9, 57.7, 56.1, 54.8, 54.3, 54.2, 54.1, 54.3, 53.9, 53.2, 53.1, 53.3, 54, 54.8]
    )
"""Для оси х используется cut_x_50"""
z_17_8_ghz = - np.array(
    [46.8, 46, 46.4, 47.3, 47.4, 46.7, 46.5, 47.2, 46.6, 46, 46.3, 46.5, 46.2, 45.6, 45.4, 45.7, 46.6, 47.5, 48.3, 48.3, 48.2, 48.6, 49.7, 51.9, 54.1, 57.2, 59.3, 57.4, 54.9, 52.3, 50.9, 50.5, 51.6, 54.2, 59.2, 58.6, 52.7, 50.4, 49.2, 48.7, 48.3, 47.6, 46.4, 45.6, 44.9, 45.1, 45.9, 47.2, 48.3, 48.1, 46.6]
    )
"""Для оси х используется cut_x_50; верхний выступ к окну, нижний к доске, прямой сигнал – 46.7"""

z_17_8_ghz_reverse = - np.flip(
    [45.7, 45.4, 45.9, 47.2, 48.1, 48.2, 48.2, 48.7, 49.8, 52, 55.4, 58.4, 59.5, 57.3, 54, 52, 50.7, 50.6, 51.4, 53.6, 58.7, 60.4, 54.6, 51.5, 50, 48.7, 48.6]
    )
"""Для оси х используется cut_x_26"""
###################################################################################################
"""ge – комбинация из прямоугольника и трапеции"""

ge_8_2_ghz = - np.array(
    [53.7, 53.8, 53.9, 53.6, 53.2, 53, 53.2, 53.1, 53, 52.7, 52.6, 52.2, 52.3, 52.5, 53.4, 54.5, 55.5, 56.1, 56.8, 57.1, 57.2, 57.8, 58.2, 59, 58.9, 58.4, 57.7, 56.8, 56, 55.3, 55, 54.5, 54.7, 54.6, 54.8, 54.6, 54.9, 54.7, 54.5, 54.4, 53.9, 53.6, 53.3, 53.1, 53.2, 53.7, 54.7, 55.3, 56.2, 56.7, 56.1]
    )
"""Для оси х используется cut_x_50"""
ge_8_2_ghz_reverse = - np.flip(
    [53.7, 53.4, 52.9, 52.6, 52.3, 51.9, 51.8, 51.8, 52.1, 52.3, 52.7, 53.4, 54.4, 55.3, 56.6, 57.4, 57.8, 57.8, 58.1, 57.9, 57.7, 58.2, 58.5, 57.2, 56.4, 56.3, 55.2, 54.6, 54.4, 54.1, 54.3, 54.5, 54.4, 54.7, 54.7, 54.4, 54.1, 53.8, 53.3, 53.2, 53.2, 53.3, 54.2, 55.1, 55.9, 56.2, 56.4, 56.1, 54.9, 54, 53.8]
    )
"""Для оси х используется cut_x_50"""
ge_10_ghz = - np.array(
    [50.6, 50.2, 49.7, 49.3, 49.5, 49.3, 49.1, 49, 48.6, 48, 48, 47.8, 47.9, 48.5, 48.8, 49.4, 50.4, 51.6, 52.6, 54.2, 54.8, 54.7, 54.2, 53.2, 53.1, 53.6, 54.3, 53.8, 52.8, 52.1, 51.3, 50.7, 50.7, 50.8, 50.8, 51.1, 51.4, 51.4, 51.1, 50.9, 50.4, 50.7, 50.9, 51.6, 52.6, 53.4, 53.6, 52.9, 52.2, 51.5, 51.3]
    )
"""Для оси х используется cut_x_50"""
ge_10_ghz_reverse = - np.flip(
    [50, 50.2, 49.8, 49.9, 49.7, 48.7, 48.2, 48.4, 48.8, 48.8, 49.1, 49.6, 49.8, 50.9, 52.4, 53.9, 55.9, 57.3, 57.1, 55.6, 54.7, 54.3, 54.7, 54.9, 54.1, 53.6, 52.4, 52, 51.5, 50.8, 50.6, 50.7, 50.8, 51.1, 51.1, 51.3, 50.9, 50.4, 50.1, 50.3, 50.8, 51, 52.7, 53.6, 53.4, 52.4, 51.8, 51.4, 51.5, 51.2, 51.3]
    )
"""Для оси х используется cut_x_50"""
ge_11_8_ghz_reverse = - np.array(
    [55.2, 55.5, 55.4, 54.7, 54.6, 54.9, 55.9, 56.5, 56.8, 56.3, 55.8, 54.4, 53.5, 53.3, 53.3, 53.7, 54.1, 54.9, 55.1, 55, 55.3, 55.5, 56.7, 58.2, 57.6, 57.3, 57.1, 55.7, 55.8, 55.5, 56.2, 56.9, 57.7, 56.8, 55.7, 54.3, 54, 53.4, 53.5, 52.2, 51.7, 51.6, 52, 52.2, 52.4, 52.2, 52.1, 52.2, 52.6, 52.8, 53.1]
    )
"""Для оси х используется cut_x_50"""
ge_11_8_ghz = - np.flip(
    [54.6, 54.5, 54.3, 54.6, 55.4, 55.8, 55.4, 54.3, 53.6, 53.7, 53.4, 53.6, 54.3, 55.6, 56.1, 56.1, 55.6, 55.5, 55.5, 56.2, 56.1, 56.6, 56.9, 57.1, 56.9, 56.2, 57.5, 57.4, 57.9, 57.4, 56.6, 55.4, 54.6, 54.2, 53.5, 53.4, 52.8, 52.2, 52.0, 52.3, 52.5, 53, 53.1, 53.1, 53.2, 53.9, 54.7, 54.8, 54.4, 55.2, 54.9]
    )
"""Для оси х используется cut_x_50"""
ge_17_8_ghz_reverse = - np.array(
    [45.5, 45.5, 46.2, 47.9, 48.7, 49.1, 49.3, 49.2, 49.2, 49.3, 49.7, 50, 49.6, 48.4, 48.4, 48.9, 50.1, 53.1, 58.7, 60.9, 60.4, 59.1, 57.9, 54.6, 52.6, 52.4, 53.2, 53.7, 52.9, 51.8, 50.7, 50.2, 49.9, 49, 47.8, 46.9, 46.5, 45.4, 45.1, 45.1, 45, 44.9, 45.2, 45.7, 46.1, 46.5, 46.1, 45.3, 45.1, 45.5, 46.2]
    )
"""Для оси х используется cut_x_50"""
ge_17_8_ghz_dop = - np.flip(
    [48.4, 48.2, 49.4, 51.8, 56.3, 60.3, 60.6, 60.1, 59.2, 56.1, 53.1, 52.4, 53.2, 54.2, 53.8, 52.2, 51, 50.7, 49.9, 49.1, 47.7, 47.2, 46.7, 45.9, 45.1, 44.9, 44.9]
    )
"""Для оси х используется cut_x_26"""
###################################################################################################
"""pirform – фигура в виде груши: круг, перетекающий в круг поменьше"""

pirform_8_2_ghz = - np.flip(
    [48.5, 49.6, 50, 50.4, 51, 51.8, 52.8, 53, 53.2, 53.4, 53.3, 53.5, 53.6, 54.5, 55.5, 56.2, 55.8, 55, 54.5, 53.3, 51.7, 50.8, 49.8, 49.6, 49.5, 50, 50.7, 51.8, 53.5, 55.8, 57.7, 59.9, 60.3, 57.7, 54.2, 52.4, 51, 50.4, 49.9, 50.2, 50.5, 50.9, 51, 51.1, 50.8, 50.5, 49.8, 49.2, 48.7, 48.7, 48.8]
    )
"""Для оси х используется cut_x_50"""
pirform_8_2_ghz_reverse = - np.array(
    [53.1, 53.3, 54.3, 55.1, 55.7, 55.6, 55.2, 54.5, 53.1, 51.7, 51.3, 50.4, 49.9, 49.8, 49.8, 50.5, 51.1, 52.2, 54.1, 57.5, 59.9, 62.9, 59.9, 56.3, 53.9, 52.3, 51.1]
    )
"""Для оси х используется cut_x_26"""
pirform_10_ghz = - np.flip(
    [51.1, 50.5, 50.6, 51, 51.5, 52.4, 52.8, 53.7, 55.2, 56.2, 56.2, 56.4, 56.1, 56.3, 56.4, 56.6, 57.2, 57.3, 56.4, 55.3, 53.8, 52.6, 51.9, 51.8, 51.7, 52.4, 53.3, 54.4, 56.6, 60.3, 62.9, 61.3, 58.9, 55.9, 54.7, 53.9, 53.3, 53.5, 54.1, 54.5, 54.4, 53.8, 52.9, 52.1, 51.6, 51.4, 51.4, 51.6, 51.7, 51.9, 52.3]
    )
"""Для оси х используется cut_x_50"""
pirform_10_ghz_reverse = - np.array(
    [55.3, 55.7, 55.6, 56.1, 56.6, 56.7, 56.1, 55.5, 54.9, 53.8, 52.9, 51.9, 51.7, 51.6, 52.1, 52.9, 54.3, 56, 58.7, 62.1, 62.3, 59.8, 56.7, 54.7, 53.4, 53.1, 53.1]
    )
"""Для оси х используется cut_x_26"""
pirform_11_8_ghz = - np.array(
    [51.6, 51.4, 51.2, 50.6, 50.6, 50.8, 51, 51.1, 51.2, 51.7, 52.3, 53.3, 53.9, 54.3, 54.4, 54.3, 54.1, 54.4, 55.1, 56.3, 57.8, 58.8, 59.4, 59.4, 58.9, 58.3, 57.2, 57.1, 57.5, 57.9, 58.1, 58.3, 58.1, 57.9, 57.7, 57.5, 57.3, 57.2, 56.4, 56, 55.3, 54.6, 54.1, 53.5, 52.9, 52.3, 51.8, 51.7, 52.1, 52.3, 53.1]
    )
"""! Сильный шум ! Для оси х используется cut_x_50"""
pirform_11_8_ghz_reverse = - np.flip(
    [56.9, 56.7, 56.1, 56.3, 57.1, 58.2, 68, 64.7, 69.1, 71.3, 66.5, 63.7, 61.7, 67, 61.2, 61.7, 61.9, 62.5, 62.7, 62.1, 61.5, 60.9, 60.3, 59.3, 58.7, 57.8, 56.5]
    )
"""Для оси х используется cut_x_26"""
pirform_11_8_ghz_again = - np.array(
    [53.9, 54, 53.6, 53.2, 53.2, 53.1, 53.4, 53.4, 53.5, 53.8, 54.3, 55.2, 55.9, 56.6, 56.9, 56.6, 56.5, 56.7, 57.1, 58.5, 60.6, 63.7, 68.1, 69.8, 65.4, 62.7, 61.4, 60.6, 60.2, 61.1, 61.8, 62.8, 62.7, 61.6, 60.7, 59.7, 59.1, 58.8, 58.2, 58.3, 57.4, 56.3, 55.3, 54.8, 54.1, 53.2, 52.7, 52.6, 53, 53.6, 54]
    )
"""Для оси х используется cut_x_50"""
pirform_17_8_ghz = - np.array(
    [46, 46.1, 45.8, 45.7, 45.5, 45.2, 44.9, 44.8, 45, 45.3, 45.4, 46.2, 47.4, 48.7, 49.3, 49.9, 51, 53.2, 55.8, 58.5, 60, 60.3, 59.7, 59.8, 59.4, 59.2, 60, 61.7, 61, 57.6, 54.8, 53.4, 53.1, 52.6, 50.8, 49.4, 48.5, 47.8, 47.5, 47.3, 46.9, 46.5, 46.3, 46.2, 45.9, 46, 46.3, 46.4, 46.2, 46.6, 46.8]
    )
"""Для оси х используется cut_x_50; первый замер, верхушка к окну чистый сигнал 45.3"""
pirform_17_8_ghz_reverse = - np.flip(
    [49.5, 50.2, 51.2, 53.1, 55.4, 58.3, 59.2, 59.5, 59.8, 60.5, 60.4, 60.4, 61.4, 62.4, 60.6, 57.6, 54.6, 53.5, 53.5, 53.4, 52.3, 50.5, 48.8, 48.2, 48.1, 47.9, 47.7]
    )
"""Для оси х используется cut_x_26, второй замер, верхушка к доске"""

###################################################################################################
"""Amogus – фигура в виде кривого овала с выступом"""

amogus_8_2_ghz = - np.flip(
    [49.2, 49.8, 50.2, 50.4, 51.2, 51.8, 53.1, 53.5, 53.1, 52.1, 51.9, 52.4, 53, 54.1, 56.4, 59.6, 61.2, 59.4, 55.7, 53.3, 51.3, 50.3, 49.6, 49.2, 49.2, 49.6, 50.5, 51.5, 52.6, 53.7, 54.4, 54, 53.3, 52.4, 52, 51.9, 51.6, 52.4, 53.1, 52.9, 53.1, 53.3, 52.1, 51.2, 50.5, 50.2, 50, 49.4, 49, 48.9, 48.9]
    )
"""Для оси х используется cut_x_50"""

amogus_8_2_ghz_reverse = - np.array(
    [52.2, 52.2, 53.1, 54.4, 56.1, 58.7, 59.6, 57.8, 54.9, 53.6, 51.8, 50.3, 49.5, 49.3, 49.4, 49.7, 50.6, 51.9, 53.2, 55.4, 55.7, 55.1, 54.4, 52.6, 52.2, 51.8, 52.5]
    )
"""Для оси х используется cut_x_26"""

amogus_10_ghz = - np.flip(
    [51.2, 51.4, 51.5, 51.9, 52.2, 52.4, 53, 53.7, 54.6, 55.4, 54.8, 54.2, 54.3, 54.7, 55.3, 57.1, 60.9, 62.8, 59.3, 56.5, 53.7, 52.1, 51.2, 51, 51.6, 52.4, 53.2, 54.2, 54.8, 55.1, 54.7, 54.6, 54.4, 54.4, 55.1, 55.5, 55.9, 56.3, 56.1, 54.7, 53.9, 53.5, 53.2, 52.5, 52.1, 51.4, 50.8, 51, 51.1, 51.5, 51.9]
    )
"""Для оси х используется cut_x_50"""

amogus_10_ghz_reverse = - np.array(
    [54.8, 54.6, 54.4, 54.5, 54.8, 56.1, 58.2, 61.7, 62.1, 59.4, 56, 53.4, 52.2, 51.5, 51.4, 51.8, 53.2, 54.5, 55.3, 55.4, 54.9, 54.4, 53.9, 54.4, 55.3, 56.2, 56.5]
    )
"""Для оси х используется cut_x_26"""

amogus_11_8_ghz = - np.flip(
    [53.6, 53.7, 53.6, 53.4, 53.8, 54.2, 54.9, 55.3, 55.5, 55.8, 56.2, 57.1, 57.8, 58.1, 57.8, 57.7, 59.4, 61.1, 64.2, 70.2, 69.3, 64.3, 62.7, 61.1, 60.6, 61.4, 61.7, 62.1, 60.9, 59.6, 58.7, 58.5, 59.2, 59.9, 61.2, 60.7, 58.9, 57.8, 56.2, 55.8, 55.2, 55.2, 54.3, 53.5, 53.3, 53.2, 53.1, 53, 52.6, 52.8, 53.2]
    )
"""Для оси х используется cut_x_50"""

amogus_11_8_ghz_reverse = - np.array(
    [56.3, 57.2, 57.3, 57.3, 57.3, 57.9, 58.8, 61.4, 65.1, 72.2, 69.5, 64.3, 62.7, 61.6, 61.8, 62.3, 62.8, 62.8, 60.7, 58.8, 58.3, 58.1, 59.2, 60, 59.9, 59.4, 58.2]
    )
"""Для оси х используется cut_x_26"""

amogus_17_8_ghz = - np.flip(
    [50.4, 50, 50.9, 52.7, 55.3, 57.2, 57.2, 57.3, 57.9, 56.9, 56, 56.1, 58.5, 61.3, 60.3, 59.1, 59.8, 60.9, 58.5, 55.4, 53.7, 52.6, 51.8, 50.6, 49.5, 48.9, 47.8]
    )
"""Для оси х используется cut_x_26"""

amogus_17_8_ghz_reverse = - np.array(
    [47.3, 44.8, 44.9, 45.5, 45.9, 46.1, 46.2, 46.8, 47.8, 48.8, 49.2, 49.9, 50.8, 51.1, 50.6, 50.1, 50.4, 52.2, 54.3, 56.7, 57.1, 57.3, 57.1, 57.4, 56.3, 56.2, 57.6, 59.8, 60.7, 59.5, 59.1, 60.2, 59.5, 56.2, 54.3, 52.5, 51.4, 49.9, 48.9, 48.3, 47.6, 46.8, 46.4, 45.9, 45.6, 45.4, 45.7, 45.8, 45.5, 45.8, 46.5]
    )
"""Для оси х используется cut_x_50"""

###################################################################################################
"""Данные с пометкой rx – перемещение приёмника при соответствующем неподвижном объекте ровно напротив излучателя"""

rx_8_2_ghz_amogus = - np.flip(
    [37.1, 38.3, 40.5, 41.7, 43.4, 44.3, 42.1, 40.2, 39.1, 37.7, 36.4, 35.8, 35.1, 33.9, 33.3, 33, 32.6, 32, 32.2, 32.6, 32.5, 32.1, 32.1, 32.4, 32.8, 33.1, 33.7, 33.9, 34.3, 34.0, 33.9, 33.9, 34.4, 34.8, 35.8, 37.3, 37.3, 37.1, 37.5, 36.7, 36.1, 35.8, 35.9, 35.2, 34.8, 35.9, 36.3, 36.1, 36.6, 37.8, 37.1]
    )
"""Движение приемника от окна к доске; для оси х используется cut_x_50"""

rx_8_2_ghz_amogus_dop_cut_reverse = - np.flip(
    [37.3, 36.4, 35.7, 34.9, 33.9, 33.2, 33.1, 33.2, 32.9, 31.9, 31.4, 31.4, 31.7, 32, 32.3, 32.7, 32.6, 32.5, 32.8, 33.8, 35, 36.1, 37.7, 40.0, 39.6, 39.7, 40.6]
    )
"""Движение приемника от окна к доске; для оси х используется cut_x_26"""

rx_10_ghz_square = - np.flip(
    [34.8, 35.1, 35.3, 35.9, 36.7, 38.2, 39.3, 39.6, 40., 39.6, 39.2, 38.8, 38.4, 37.8, 36.7, 35.8, 34.8, 34.3, 34, 33.6, 33.5, 33.4, 33.5, 33.4, 33.3, 33.3, 34.2, 34.6, 35.2, 35.6, 36, 36.5, 37.1, 37.1, 38, 38.2, 38, 38.4, 38.1, 36.6, 36.5, 36.3, 36.3, 36.4, 35.8, 35.8, 36.1, 35.4, 35.9, 36.4, 36.7]
    )
"""Движение приемника от окна к доске; для оси х используется cut_x_50"""

rx_10_ghz_amogus = - np.flip(
    [35.1, 35.6, 36.1, 36.7, 38.1, 40.3, 42.3, 44.2, 43.1, 41.4, 40.6, 38.8, 37.5, 36.3, 35, 33.9, 33.2, 32.3, 32.2, 31.9, 31.7, 31.9, 31.9, 32, 32, 32.4, 33.5, 34.1, 34.5, 35.4, 35.7, 35.6, 36, 35.4, 35.5, 35.1, 35, 35.2, 35.1, 34.5, 34.7, 34.8, 35.3, 35.3, 35.4, 36.8, 37.1, 37.3, 38.3, 39, 39.5]
    )
"""Движение приемника от окна к доске; для оси х используется cut_x_50"""

rx_10_ghz_amogus_dop_cut_reverse = - np.flip(
    [36.4, 36.6, 36.4, 35.4, 34.6, 33.9, 33.5, 33, 32.7, 32.7, 32.6, 32.6, 32.3, 32, 33.3, 33.1, 33.6, 34.1, 34.7, 35.8, 36.6, 37.5, 38.6, 39.2, 40.4, 42.5, 42.9]
    )
"""движение приемника от окна к доске; для оси х используется cut_x_26"""

rx_11_8_ghz_amogus = - np.flip(
    [41.1, 41.2, 41.2, 41.5, 42.8, 44.1, 45.5, 47.3, 50.9, 58.2, 61.4, 51.8, 47.9, 45.8, 44.1, 42.5, 41.4, 41, 40.2, 39.8, 40.2, 44, 40.9, 40.7, 41.6, 42.3, 42.7, 44.1, 44.2, 44.8, 44.3, 43.6, 43, 42.5, 42.3, 41.8, 42.2, 41.4, 41.6, 42.6, 43.2, 43.3, 42.6, 43.4, 43.7, 44.2, 43.8, 43.9, 44.6, 43.3, 43.6]
    )
"""Движение приемника от окна к доске; для оси х используется cut_x_50"""

rx_11_8_ghz_amogus_dop_cut_reverse = - np.flip(
    [40.9, 41.4, 41.2, 41.3, 41.5, 41.7, 41.9, 41.8, 41.6, 41.5, 41.4, 40.7, 40.8, 41, 41.3, 41.4, 41.6, 42.3, 42.8, 43.4, 44.6, 47.4, 51.8, 54.7, 55.6, 53.7, 50.3]
    )
"""Движение приемника от окна к доске; для оси х используется cut_x_26"""

rx_17_8_ghz_big_circle = - np.array(
    [52.1, 51.3, 51, 50.8, 51, 51.5, 52.1, 53.2, 53.8, 54.6, 55.5, 55.5, 55.2, 54.9, 54.5, 54.1, 53.8, 53.8, 53.7, 54.1, 54.5, 55.4, 56, 57.2, 57.9, 58.1, 58.5, 58.4, 58.2, 57.8, 57.1, 56.9, 56.6, 55.8, 55, 54.6, 54.2, 53.7, 53.5, 53.7, 54.5, 54.8, 55, 53.3, 52.3, 52, 50.8, 50.4, 50, 49.5, 49.5]
    )
"""Движение приемника от доски к окну; для оси х используется cut_x_50"""

rx_17_8_ghz_max_circle = - np.array(
    [55.4, 56.3, 56.6, 57.6, 57.4, 57.6, 57.1, 56.2, 55.4, 55.5, 56.3, 57.3, 59.4, 60.8, 61.5, 61.4, 60.6, 59.3, 58.5, 57.8, 57.1, 56.7, 56.6, 56.2, 55.8, 55.7, 55.3, 55.2, 55.2, 55.2, 54.8, 54.6, 54.6, 54.8, 55.3, 56.2, 57.2, 57.7, 57.9, 57.1, 55.7, 54.8, 53.6, 52.9, 52.7, 53.5, 54.4, 54.7, 54.6, 54.5, 54.3]
    )
"""Движение приемника от доски к окну; для оси х используется cut_x_50"""

rx_17_8_ghz_z = - np.array(
    [46.1, 46, 46.3, 46.7, 47.2, 47.7, 48.1, 48.5, 49.3, 49.7, 49.8, 50.1, 50.2, 50.3, 50.8, 51, 51.3, 51.9, 52.6, 53, 53.5, 54, 54.7, 55.3, 56, 56.8, 58.1, 58.8, 59.4, 59.6, 59.5, 59.6, 58.8, 57.5, 56.3, 55.3, 54.6, 53.8, 53.4, 53.2, 53.1, 53.7, 54.4, 55.2, 55.9, 57.1, 59.5, 60.5, 60, 58.5, 56.8, 55.2]
    )
"""Движение приемника от доски к окну, верхний выступ к окну. 
Ось х – ??? 52 значения против 51 как для cut_x_50? лишнее значение??"""

rx_17_8_ghz_z_reverse = - np.array(
    [47.7, 48.8, 50.1, 51.5, 54.2, 57.1, 59.3, 63.2, 61.1, 57.1, 55, 53.6, 52.6, 52.3, 52.4, 52.9, 52.7, 53.5, 54.2, 55.1, 56, 57, 59.4, 61.4, 62.4, 60.8, 59.7, 59.2, 59.2, 58.3, 57.3, 56.1, 55.5, 55.2, 54.7, 53.3, 52.5, 51.8, 51.5, 51.3, 51.5, 51.3, 50.4, 50.1, 49.8, 49.2, 48.8, 48.4, 48.1, 47.6, 47]
    )
"""Движение приемника от доски к окну, верхний выступ к доске"""

rx_17_8_ghz_ge = - np.array(
    [49.6, 50.1, 51.2, 52.3, 53.6, 55.4, 57.8, 60, 60.9, 60.9, 60.4, 59.7, 58.9, 57.8, 56.8, 55.8, 55, 53.7, 53.1, 52.5, 52.2, 52.3, 52.5, 52.8, 53.2, 53.6, 54.2, 54, 53.6, 53.4, 53.3, 52.9, 52.7, 52.4, 52.3, 51.8, 51.5, 51.1, 50.5, 50.2, 50, 49.6, 49.1, 48.6, 48.1, 47.8, 47.5, 47.3, 47, 46.4, 46]
    )
"""Движение приемника от доски к окну, верхний выступ к доске – реверс"""

rx_17_8_ghz_ge_reverse_maybe = - np.array(
    [46.8, 47.4, 47.9, 48.4, 49.1, 49.3, 49.2, 49.2, 49.3, 49.6, 50, 50.7, 51.7, 52.4, 52.7, 52.9, 53, 53.1, 52.7, 53, 53.1, 53.4, 54.1, 54.4, 54.3, 54, 53.4, 52.7, 52.2, 51.8, 52.3, 53.3, 54.3, 55.5, 56.5, 58, 59.2, 59.2, 59.7, 60, 59.8, 59.5, 58.8, 56.9, 55.1, 54.4, 52.8, 51.1, 50, 49.5, 49.1]
    )
"""Движение приемника от доски к окну, верхний выступ к окну – нормальное положение фигуры"""

###################################################################################################
"""freqs – массивы частот, которые изменялись при недвижимом объекте"""

freqs_low = np.arange(8, 12.1, 0.2)
freqs_low_small_step = np.arange(8, 12.1, 0.1)
freqs_high_1 = np.array([16.9, 17, 17.1, 17.2, 17.3, 17.4, 17.5, 17.6, 17.7, 17.8, 17.9, 18])
freqs_high_2 = np.array([16.8, 16.9, 17, 17.1, 17.2, 17.3, 17.4, 17.5, 17.6, 17.7, 17.8, 17.9, 18])

"""fs_signal (frequency swap signal) – массивы значений сигналов, полученных при изменении частот на одном недвижимом объекте"""

fs_signal_big_circle = - np.array(
    [56.2, 55.8, 55.1, 56, 57.5, 56, 56.5, 58.3, 57.2, 58.4, 57.9, 58]
    )
"""Используется freqs_high_1"""

fs_signal_max_circle = - np.array(
    [51.6, 51.8, 54.3, 53, 55.1, 53.1, 54.4, 52.8, 56.8, 54.1, 55.7, 55.6, 56.4]
    )
"""Используется freqs_high_2"""

fs_signal_z = - np.array(
    [55.1, 53.9, 55.4, 53.8, 56.5, 57.0, 55.8, 56.5, 55.7, 57.1, 57.3, 56.8, 58.1]
    )
"""Используется freqs_high_2"""

fs_signal_ge = - np.array(
    [48.3, 47.7, 49.4, 50.1, 50.9, 50.8, 50.5, 50.5, 53.3, 52.9, 52.8, 54.2, 53]
    )
"""Используется freqs_high_2"""

fs_signal_max_circle_low_freqs = - np.array(
    [36.2, 36.2, 35.2, 37.7, 36.7, 37.3, 41.3, 36.3, 40.7, 38.8, 37.1, 40.6, 37.4, 41.8, 37.8, 37.6, 46.6, 42.7, 43.7, 52.2, 42.9]
    )
"""Используется freqs_low"""

fs_signal_max_circle_low_freqs_small_step = - np.array(
    [36.6, 38.1, 36.7, 37.1, 35.4, 38.3, 38.2, 37.9, 37.3, 36.7, 37.9, 40.9, 41.9, 38.2, 36.8, 35.8, 41.4, 40.7, 39.5, 37.2, 37.5, 42.5, 41,
     40.5, 37.7, 38.8, 42.2, 45.4, 38.5, 37.2, 37.8, 40.2, 46.4, 45.9, 42.9, 39.9, 44.3, 48.3, 51.6, 45.8, 43.1]
    )
"""Используется freqs_low_small_step"""

fs_signal_big_circle_low_freqs_small_step = - np.array(
    [35.7, 37.4, 35.2, 36.2, 35.5, 38.2, 36.9, 34.3, 36.1, 36.8, 37.7, 38.6, 38.1, 35.9, 36.9, 36.2, 38.9, 37.8, 36.8, 36.3, 35.7, 39.3, 38.8,
     37.5, 37.9, 37.8, 38.2, 38.5, 36.1, 37.4, 39.9, 40.5, 41.8, 38.6, 39.9, 40.1, 42.6, 42.5, 40.3, 40.5, 40.3]
    )
"""Используется freqs_low_small_step"""

fs_signal_circle_low_freqs_small_step = - np.array(
    [33.7, 34.2, 34.8, 35.9, 34.6, 34.9, 34, 33.2, 35.6, 35.8, 35.8, 34.7, 35.4, 33.8, 35.9, 35.2, 35.4, 34.8, 33.9, 34.6, 34.4, 35.6, 35.8, 35.4,
     36.4, 37.1, 35.4, 35.1, 34.7, 36.1, 38.6, 38.2, 37.2, 35.5, 37.1, 37.8, 38.4, 38.4, 37.2, 37.2, 38.4]
    )
"""Используется freqs_low_small_step"""

fs_signal_square_low_freqs_small_step = - np.array(
    [35.7, 36.7, 36.3, 37.5, 36.2, 37.3, 36.4, 34.9, 37.8, 37.6, 37.5, 37.2, 37.9, 35.9, 36.8, 36.9, 38.7, 38.3, 36.1, 36.2, 36.4, 38.5, 38.3, 37.4,
     38.5, 38.1, 37.3, 37.9, 36.6, 38.1, 40.6, 41.7, 41.3, 38.5, 39.5, 39.9, 42.1, 41.9, 40.5, 40.3, 40.7]
    )
"""Используется freqs_low_small_step"""